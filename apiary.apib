FORMAT: 1A
HOST: http://127.0.0.1:8080/

# dumpster

Create, get, delete and restore (remote) dumps.

# Group dumps



# dumps [/dumps]


## get a dict of all dumps [GET]

+ Response 200 (application/json)
    + Attributes (DumpDict)

# dumps of type [/dump/{dumpType}]

## get a list of all dumps of dumpType [GET]

+ Response 200 (application/json)
    + Attributes (array[Dump])

## Create a dump [POST]

+ Request (application/json)

        {
            id: "foo-100",
            comment: "another foo dump"
        }

+ Response 200 (application/json)
    + Attributes (Dump)

        {
            "id"      : "foo-100",
            "created" : "2015-08-16T12:36:51.343245398+02:00",
            "report"  : "foo 100 is such a lame name",
            "errors"  : "",
            "comment" : "my first dump",
            "path"    : "/dump/dumpster/foo-100"
        }
        
+ Response 400 (text/plain)

        can not find this dump type: invalid-dump-type
        

# dumps [/dump/{dumpType}/{id}]

## Get a dump [GET]

+ Response 200 (application/octet-stream)

        binary contents of a dump

+ Response 404 (text/plain)

        dump not found

## Delete a dump [DELETE]

+ Response 200 (text/plain)

        successfully deleted
        
# Data Structures

## Dump (object)

+ id       : "foo" (string, required) - a unique id set by the api user
+ created  : "2015-08-16T12:36:51.343245398+02:00" (string) - timestamp
+ report   : "foo 100 is such a lame name" (string)
+ errors   : ""
+ comment  : "my first dump",
+ path"    : "/dump/dumpster/foo-100"

## DumpDict (array[Dump])








